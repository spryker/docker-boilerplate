server_names_hash_bucket_size 128;
server_tokens off;

large_client_header_buffers 4 32k;

map $remote_addr $is_whitelisted_ip {
     default         "0";
{% if docker['maintenance']['whitelist']['ips'] is defined %}
{% for ip in docker['maintenance']['whitelist']['ips'] | default([]) %}
    {{ ip }}        "1";
{% endfor %}
{% endif %}
}

{% if assets['compression'] is not empty %}
{% for compressionEngine, compressionData in assets['compression'] %}

{% include "nginx/modules/compression/#{compressionEngine}.conf.twig"  with {
    compressionData: compressionData,
} %}

{% endfor %}
{% endif %}

server {
    server_name _ default; # This is just an invalid value which will never trigger on a real hostname.
    listen 80;
    access_log off;
    add_header Content-Type text/plain;
    return 200;
}

{% for groupData in groups %}
{% for applicationName, applicationData in groupData['applications'] %}
{% for endpoint, endpointData in applicationData['endpoints'] %}
{% set zedHost = _endpointMap[endpointData['identifier']]['backend-gateway'] | default('') %}
{% include "nginx/http/#{applicationData['application']}.server.conf.twig" with {
    endpoint: endpoint,
    endpointData: endpointData,
    applicationData: applicationData,
    auth: endpointData['auth'] | default([]),
    storeServices: regions[groupData['region']]['stores'][endpointData['store']]['services'] ?? regions[groupData['region']]['services'] | default([]),
    upstream: "${SPRYKER_NGINX_CGI_" ~ (applicationName | upper) ~ "}",
    zedHost: zedHost,
    timeout: '1m',
    project: _context,
    regionEndpointMap: _context['regionEndpointMap'][endpointData['identifier']]
} %}
{% endfor %}
{% endfor %}
{% endfor %}
